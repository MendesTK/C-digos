import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;
import java.util.Scanner;
import java.util.Vector;

public class Servidor extends Thread{
	
	private static Vector clientes;
	private Socket con;
	private String nomeUsuario;
	private static List listaNomes;

	public Servidor(Socket con){
		this.con = con;
	}
	
	public boolean guardaNome(String novoNome){
		for(int i = 0; i < listaNomes.size(); i++){
			if(listaNomes.get(i).equals(novoNome)){
				return true;
			}
		}
		listaNomes.add(novoNome);
		return false;
	}
	
	public void removeNome(String nome){
		for(int i = 0; i < listaNomes.size(); i++){
			if(listaNomes.get(i).equals(nome)){
				listaNomes.remove(i);
			}
		}
	}
	
	private void sendToAll(PrintStream saida, String acao, String msg) throws IOException {
		Enumeration e = clientes.elements();
		
		while(e.hasMoreElements()){
			PrintStream chat = (PrintStream) e.nextElement();
			
			if(chat != saida){
				chat.println(this.nomeUsuario + acao + msg);
			}
		}
		
	}
	
	public void run(){
		try{
			BufferedReader entrada = new BufferedReader(new InputStreamReader(this.con.getInputStream()));
			PrintStream saida = new PrintStream(this.con.getOutputStream());
			this.nomeUsuario = entrada.readLine();
			
			if(guardaNome(this.nomeUsuario)){
				saida.print("Este nome já está em uso!");
				clientes.add(saida);
				this.con.close();
				return;
			}
			else{
				System.out.println(this.nomeUsuario + " se conectou ao servidor!");
			}
			
			if(this.nomeUsuario == null){
				return;
			}
			
			clientes.add(saida);
			String msg = entrada.readLine();
			
			while(msg != null && !(msg.trim().equals(""))){
				sendToAll(saida, " Escreveu: ", msg);
				msg  = entrada.readLine();
			}
			
			System.out.println(this.nomeUsuario + " Saiu do chat!");
			sendToAll(saida, " saiu ", "do chat!");
			removeNome(this.nomeUsuario);
			clientes.remove(saida);
			this.con.close();
		} catch (IOException e){
			e.printStackTrace();
		}
	}

	
	
	
	public static void main(String[] args){
		Scanner entrada = new Scanner(System.in);
		clientes = new Vector();
		listaNomes = new ArrayList();
		try{
			int porta;
			System.out.print("Informe a porta: ");
			porta = entrada.nextInt();
			ServerSocket server = new ServerSocket(porta);
			System.out.println("Servidor rodando na porta "+ porta);
			
			while(true){
				Socket con = server.accept();
				Thread t = new Servidor(con);
				t.start();
			}
		}catch (IOException e){
			e.printStackTrace();
		}
		
	}
	
	
	
	
	
}
